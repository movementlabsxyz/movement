name: Checks

on:
  pull_request:
    types:
      - labeled
      - opened
      - synchronize
  push:
    branches:
      - '**' 

jobs:
 
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204
          - os: macos-13-latest
            arch: arm64
            runs-on: macos-13-xlarge

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - uses: cachix/cachix-action@v15
      with:
        name: movementlabs
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Run Cargo Check in nix environment
      run: |
        nix develop --command bash  -c "cargo check --all-targets"  

  unit-tests:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204
          - os: macos-13-latest
            arch: arm64
            runs-on: macos-13-xlarge

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run unit tests in nix environment
      run: |
        nix develop --command bash <<EOF
          cargo test \
            -p maptos-opt-executor \
            -p memseq \
            -p move-rocks \
            -p movement-types \
            -p movement-config
        EOF

  movement-full-node-local:
    if: github.event.label.name == 'cicd:movement-full-node' ||  github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-16vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - uses: cachix/cachix-action@v15
      with:
        name: movementlabs
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Run Movement Full Node Tests Against Local ETH and Local Celestia
      env:
        CELESTIA_LOG_LEVEL: FATAL # adjust the log level while debugging
      run: |
        nix develop --command bash  -c "just movement-full-node native build.setup.eth-local.celestia-local.test -t=false"
        nix develop --command bash  -c "just movement-full-node native build.setup.eth-local.celestia-local.test -t=false"  

  movement-full-node-malicious:
    if: github.event.label.name == 'cicd:movement-full-node-malicious' ||  github.ref == 'refs/heads/main'

    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-16vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run Movement Full Node Gas DoS Test
      env:
        CELESTIA_LOG_LEVEL: FATAL # adjust the log level while debugging
      run: |
        nix develop --command bash  -c "just movement-full-node native build.setup.eth-local.celestia-local.gas-dos -t=false"

  movement-multi-node-local:
    # if: github.event.label.name == 'cicd:movement-multi-node-local' ||  github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-16vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run Movement Full Node Tests Against Local ETH and Local Celestia
      env:
        CELESTIA_LOG_LEVEL: FATAL # adjust the log level while debugging
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      run: |
        nix develop --command bash  -c "just movement-full-node native build.setup.eth-local.celestia-local.test-followers -t=false"

  movement-indexer-local:
    if: github.event.label.name == 'cicd:movement-full-node' ||  github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-16vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Run Movement Full Node + indexer Tests Against Local ETH and Local Celestia
      env:
        CELESTIA_LOG_LEVEL: FATAL # adjust the log level while debugging
      run: |
        nix develop --command bash  -c "just movement-full-node native build.celestia-local.indexer.hasura.indexer-test -t=false"
  
  movement-full-node-remote:
    if: false 
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - uses: cachix/cachix-action@v15
      with:
        name: movementlabs
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Run Movement Full Node Tests Against Holesky and Local Celestia
      env: 
        CELESTIA_LOG_LEVEL: FATAL # adjust the log level while debugging
        MCR_DEPLOYMENT_ACCOUNT_PRIVATE_KEY: ${{ secrets.MCR_DEPLOYMENT_ACCOUNT_PRIVATE_KEY }}
      run: |
        nix develop --command bash  -c "just movement-full-node native build.setup.eth-holesky.celestia-local.test -t=false"
        nix develop --command bash  -c "just movement-full-node native build.setup.eth-holesky.celestia-local.test -t=false"

  movement-celestia-da-light-node:
    if: false # this is effectively tested by the above
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - uses: cachix/cachix-action@v15
      with:
        name: movementlabs
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Run Movement DA Light Node tests in nix environment
      # adjust the log level while debugging
      run: CELESTIA_LOG_LEVEL=FATAL nix develop --command bash  -c "just movement-celestia-da-light-node native build.setup.test.local -t=false"  

    - name: Run foundry tests
      # Run the foundry solidity contracts using the WETH9 contract on sepolia
      run: cd protocol-units/bridge/contracts && forge test --fork-url https://ethereum-sepolia-rpc.publicnode.com -vv  

  mcr:
    if: github.event.label.name == 'cicd:mcr' ||  github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main


    - uses: cachix/cachix-action@v15
      with:
        name: movementlabs
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Run MCR Client Tests
      run: nix develop --command bash  -c "just mcr-client native build.local.test -t=false"
  
  test-bridge-solidity-contracts:
    #if: github.event.label.name == 'cicd:bridge' ||  github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - uses: cachix/cachix-action@v15
      with:
        name: movementlabs
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Run foundry tests
      run: |
        nix develop --command bash -c "
            cd protocol-units/bridge/contracts && \
            forge test --fork-url https://ethereum-sepolia-rpc.publicnode.com -vv
        "

  test-bridge-integration-and-e2e:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            runs-on: buildjet-8vcpu-ubuntu-2204

    runs-on: ${{ matrix.runs-on }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Aptos CLI
      run: |
        curl -fsSL "https://raw.githubusercontent.com/andygolay/aptos-cli-install/refs/heads/main/install_cli_v3.5.py" | python3

    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - uses: cachix/cachix-action@v15
      with:
        name: movementlabs
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Run bridge client integration and E2E tests
      # adjust the log level while debugging
      run: | 
        CELESTIA_LOG_LEVEL=FATAL nix develop --command bash  -c "just bridge native build.setup.eth-local.celestia-local.bridge -t=false" 
        DOT_MOVEMENT_PATH="$(pwd)/.movement" cargo test -p bridge-integration-tests -- --nocapture --test-threads=1

  # test-bridge-e2e:
  #   strategy:
  #     matrix:
  #       include:
  #         - os: ubuntu-22.04
  #           arch: x86_64
  #           runs-on: buildjet-8vcpu-ubuntu-2204

  #   runs-on: ${{ matrix.runs-on }}

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   - name: Install Aptos CLI
  #     run: |
  #       curl -fsSL "https://raw.githubusercontent.com/andygolay/aptos-cli-install/refs/heads/main/install_cli_v3.5.py" | python3

  #   - name: Install Nix
  #     uses: DeterminateSystems/nix-installer-action@main

  #   - uses: cachix/cachix-action@v15
  #     with:
  #       name: movementlabs
  #       authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

  #   - name: Run Movement Client tests
  #     # adjust the log level while debugging
  #     run: CELESTIA_LOG_LEVEL=FATAL nix develop --command bash  -c "just bridge native build.setup.eth-local.celestia-local.bridge.test-e2e -t=false"  

  
