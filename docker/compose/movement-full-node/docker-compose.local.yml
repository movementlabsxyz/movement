services:
  # setup the full node
  setup:
    image: ghcr.io/movementlabsxyz/movement-full-node:${CONTAINER_REV}
    container_name: setup
    command: setup all
    environment:
      DOT_MOVEMENT_PATH: /.movement
      # By default, all the listener hostnames and ports are reasonable.
      # However, for container networking, we need to specify the hostnames on the connection.
      # You can also use host.docker.internal for the host machine as all of these ports should be exposed.
      CELESTIA_RPC_CONNECTION_HOSTNAME: movement-celestia-appd
      CELESTIA_WEBSOCKET_CONNECTION_HOSTNAME: movement-celestia-bridge
      MOVEMENT_DA_LIGHT_NODE_CONNECTION_HOSTNAME: movement-celestia-da-light-node
      MAPTOS_API_CONNECTION_HOSTNAME: movement-full-node
      FAUCET_API_CONNECTION_HOSTNAME: movement-faucet-service
      ETH_RPC_CONNECTION_HOSTNAME: setup
      ETH_RPC_CONNECTION_PROTOCOL: http
      ETH_RPC_CONNECTION_PORT: 8090
      ETH_WS_CONNECTION_HOSTNAME: setup
      ETH_WS_CONNECTION_PROTOCOL: ws
      ETH_WS_CONNECTION_PORT: 8090
      MAYBE_RUN_LOCAL: "true"
      MAYBE_DEPLOY_MCR: "true"
      INDEXER_PROCESSOR_POSTGRES_CONNECTION_STRING: postgres://postgres:password@postgres:5432/postgres
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_DEFAULT_REGION}
      MAPTOS_DA_SEQUENCER_CONNECTION_URL: http://movement-da-sequencer:30730
    volumes:
      - ${DOT_MOVEMENT_PATH}:/.movement
    ports:
      - "8090:8090" # port for anvil, this should be moved out into runner
    healthcheck:
      test: [ "CMD-SHELL", "nc -zv 0.0.0.0 8090" ]
      retries: 30
      interval: 10s
      timeout: 5s


  # add dependencies to the full node
  movement-full-node:
    environment:
      MAPTOS_DA_SEQUENCER_CONNECTION_URL: http://movement-da-sequencer:30730
    depends_on:
      setup:
        condition: service_completed_successfully
      movement-da-sequencer:
        condition: service_healthy