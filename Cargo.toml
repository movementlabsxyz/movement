[workspace]
resolver = "2"

members = [
    "protocol-units/execution/monza/*",

    "protocol-units/da/m1/*",

    "protocol-units/sequencing/*",

    "protocol-units/mempool/*",

    "util/*",
    "util/buildtime/buildtime-helpers",
    "util/buildtime/buildtime-macros",

    "networks/monza/monza-full-node"

]

[workspace.package]
version = "0.3.0"
edition = "2021"
license = "MIT OR Apache-2.0"
authors = ["Movement Labs"]
repository = "www.github.com/movementlabs/movement"
homepage = "www.homepage.com"
publish = false
rust-version = "1.75"

[workspace.dependencies]
# internal
## execution/monza
monza-opt-executor = { path = "protocol-units/execution/monza/opt-executor" }
monza-fin-executor = { path = "protocol-units/execution/monza/fin-executor" }
monza-execution-util = { path = "protocol-units/execution/monza/util" }
monza-executor = { path = "protocol-units/execution/monza/executor" }
## types
movement-types = { path = "util/movement-types"}
## buildtime
buildtime = { path = "util/buildtime" }
buildtime-helpers = { path = "util/buildtime/buildtime-helpers" }
buildtime-macros = { path = "util/buildtime/buildtime-macros" }
## da/m1
m1-da-light-node-grpc = { path = "protocol-units/da/m1/light-node-grpc" }
m1-da-light-node-util = { path = "protocol-units/da/m1/util" }
m1-da-light-node-verifier = { path = "protocol-units/da/m1/light-node-verifier" }
m1-da-light-node-client = { path = "protocol-units/da/m1/light-node-client" }
## mempool
mempool-util = { path = "protocol-units/mempool/util" }
move-rocks = { path = "protocol-units/mempool/move-rocks" }
## sequencing
sequencing-util = { path = "protocol-units/sequencing/util" }
memseq = { path = "protocol-units/sequencing/memseq" }


auto_impl = "1.2.0"
chrono = "0.4.37"
serde = { version = "1.0.192", features = ["derive", "rc"] }
serde_json = { version = "1.0.81", features = [
    "preserve_order",
    "arbitrary_precision",
] } # Note: arbitrary_precision is required to parse u256 in JSON
serde_with = "3.7.0"
derivative = "2.2.0"
anyhow = "1.0.68"
derive_more = { version = "0.99.11", default-features = false }
bytes = { version = "1.2.1", default-features = false }
clap = { version = "4.4.10", features = ["derive"] }
log = "0.4.21"
hex = { version = "0.4.3", default-features = false, features = [
    "alloc",
    "serde",
] }
async-trait = "0.1.71"
borsh = { version = "0.10.3", features = ["rc", "bytes"] }
tracing = "0.1.40"
tokio = { version = "1.35.1", features = ["full"] }
tokio-stream = "0.1.15"
async-stream = "0.3.0"
tempfile = "3.5"
fail = "0.5.1"
jsonrpsee = { version = "0.20.1", features = ["jsonrpsee-types"] }
proptest = { version = "1.3.1", default-features = false, features = ["alloc"] }
poem-openapi = { version = "=2.0.11", features = ["swagger-ui", "url"] }
schemars = { version = "0.8.16", features = ["derive"] }
thiserror = "1.0.50"
x25519-dalek = "1.0.1"
rand = "0.7.3"
rand_core = "0.5.1"
zstd-sys = "2.0.9"
async-channel = "2.2.1"
sha2 = "0.10.8"

risc0-build = "0.20"

rocksdb = { version = "0.21.0", features = [
  "snappy",
  "lz4",
  "zstd",
  "zlib",
  "multi-threaded-cf",
], default-features = false }

# tonic
tonic = "0.11"
tonic-reflection = "0.11"
tonic-web = "0.11"
tonic-build = { version = "0.11", features = ["prost"] }
prost = "0.12"

# marcos
quote = "1.0"
syn = "2.0"

# format
toml = "0.8"

# aptos dependencies
ethereum-types = "0.14.1"
ethers = "=2.0.10"
ethers-core = { version = "=2.0.10", default-features = false }
ethers-contract = "=2.0.10"
ethers-providers = { version = "=2.0.10", default-features = false }
ethers-signers = { version = "=2.0.10", default-features = false }
ethers-middleware = { version = "=2.0.10", default-features = false }

# Aptos dependencies
# We use a forked version so that we can override dependency versions. This is required
# to be avoid depenedency conflicts with other Sovereign Labs crates.
aptos-vm = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-sdk = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-consensus-types = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-crypto = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-db = { git = "https://github.com/movementlabsxyz/aptos-core.git", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-api-types = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-types = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-api = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-storage-interface = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-block-executor = { git = "https://github.com/movementlabsxyz/aptos-core.git", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-vm-types = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-vm-logging = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-language-e2e-tests = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-framework = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-config = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-vm-genesis = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-executor = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-executor-types = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-executor-test-helpers = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-bitvec = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-mempool = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-state-view = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }
aptos-temppath = { git = "https://github.com/movementlabsxyz/aptos-core", rev = "d78124550562a757b2e4899610a62815d6931037" }

# celestia dependencies
celestia-rpc = { git = "https://github.com/eigerco/lumina" }
celestia-types = { git = "https://github.com/eigerco/lumina" }


[workspace.lints.rust]
dead_code = "deny"
unused_imports = "deny"
non_ascii_idents = "deny" # Bad for readability and it can also be a security vulnerability

# In case you need inspiration for new lints to add to the list, this is a good
# reference: <https://github.com/EmbarkStudios/rust-ecosystem/blob/6783ae1573d62f3f5439b8ff9e04bec191ec2eaf/lints.toml>.
[workspace.lints.clippy]
debug_assert_with_mut_call = "deny"
inefficient_to_string = "deny"
map_flatten = "deny"
manual_ok_or = "deny"
doc_link_with_quotes = "deny"
match_same_arms = "deny"
semicolon_if_nothing_returned = "deny"



[patch.crates-io]
serde-reflection = { git = "https://github.com/aptos-labs/serde-reflection", rev = "73b6bbf748334b71ff6d7d09d06a29e3062ca075" }
merlin = { git = "https://github.com/aptos-labs/merlin" }
# x25519-dalek = { git = "https://github.com/aptos-labs/x25519-dalek", branch = "zeroize_v1" }
sha2 = { git = "https://github.com/risc0/RustCrypto-hashes", tag = "sha2-v0.10.8-risczero.0" }
ed25519-dalek = { git = "https://github.com/risc0/curve25519-dalek", tag = "curve25519-4.1.0-risczero.1" }
zstd-sys = { git = "https://github.com/gyscos/zstd-rs.git", rev = "1779b385b42b08f958b767a37878dfa6a0b4f6a4" }
